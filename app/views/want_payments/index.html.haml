= javascript_include_tag("https://ajax.aspnetcdn.com/ajax/jquery.validate/1.8.1/jquery.validate.min.js")
= javascript_include_tag("https://js.stripe.com/v1/")
:javascript
  $(function() {
    Stripe.setPublishableKey("pk_#{STRIPE_PUBLIC_KEY}");
    $(document).ready(function() {
      function addInputNames() {
        // Not ideal, but jQuery's validate plugin requires fields to have names
        // so we add them at the last possible minute, in case any javascript
        // exceptions have caused other parts of the script to fail.
        $(".card-number").attr("name", "card-number")
        $(".card-cvc").attr("name", "card-cvc")
        $(".card-expiry-year").attr("name", "card-expiry-year")
      }

      function removeInputNames() {
        $(".card-number").removeAttr("name")
        $(".card-cvc").removeAttr("name")
        $(".card-expiry-year").removeAttr("name")
      }

      function submit(form) {
        // remove the input field names for security
        // we do this *before* anything else which might throw an exception
        removeInputNames(); // THIS IS IMPORTANT!

        // given a valid form, submit the payment details to stripe
        $(form['submit-button']).attr("disabled", "disabled")
        Stripe.createToken({
          number: $('.card-number').val(),
          cvc: $('.card-cvc').val(),
          exp_month: $('.card-expiry-month').val(),
          exp_year: $('.card-expiry-year').val()
        }, 100, function(status, response) {
          if (response.error) {
            // re-enable the submit button
            $(form['submit-button']).removeAttr("disabled")

            // show the error
            $(".payment-errors").html(response.error.message);

            // we add these names back in so we can revalidate properly
            addInputNames();
          } else {
            // token contains id, last4, and card type
            var token = response['id'];

            // insert the stripe token
            var input = $("<input name='stripeToken' value='" + token + "' style='display:none;' />");
            form.appendChild(input[0])

            // and submit
            form.submit();
          }
        });

        return false;
      }

      // add custom rules for credit card validating
      jQuery.validator.addMethod("cardNumber", Stripe.validateCardNumber, "Please enter a valid card number");
      jQuery.validator.addMethod("cardCVC", Stripe.validateCVC, "Please enter a valid security code");
      jQuery.validator.addMethod("cardExpiry", function() {
        return Stripe.validateExpiry($(".card-expiry-month").val(),
                                     $(".card-expiry-year").val())
      }, "Please enter a valid expiration");

      // We use the jQuery validate plugin to validate required params on submit
      $(".edit_want_payment").validate({
        submitHandler: submit,
        rules: {
          "card-cvc" : {
            cardCVC: true,
            required: true
          },
          "card-number" : {
            cardNumber: true,
            required: true
          },
          "card-expiry-year" : "cardExpiry" // we don't validate month separately
        }
      });

      // adding the input field names is the last step, in case an earlier step errors
      addInputNames();
    });

    var select = $(".card-expiry-month"), month = new Date().getMonth() + 1;
    for (var i = 1; i <= 12; i++) {
      select.append($("<option value='"+i+"' "+(month === i ? "selected" : "")+">"+i+"</option>"))
    }

    var select = $(".card-expiry-year"), year = new Date().getFullYear();

    for (var i = 0; i < 12; i++) {
      select.append($("<option value='"+(i + year)+"' "+(i === 0 ? "selected" : "")+">"+(i + year)+"</option>"))
    }

    $(".recommended_charities .charity").click(function() {
      var name = $(this).html();
      $("#want_payment_charity_name").val(name);

      var href = $(this).closest("li").find(".website").attr("href");
      $("#want_payment_charity_website").val(href);
    });

    $(".number_field").keydown(function(event) {
      if (event.keyCode == 46 || event.keyCode == 8  || event.keyCode == 9) {
        // let it happen, don't do anything
      } else {
        // Ensure that it is a number and stop the keypress
        if (event.keyCode < 48 || event.keyCode > 57) {
          event.preventDefault();
        }
      }
    });

    $(".amount_payed_field").change(function() {
      var dollars = $("#want_payment_amount_dollars").val();
      if (dollars.length == 0) dollars = 0;
      var cents = $("#want_payment_amount_cents").val();
      if (cents.length == 0) cents = 0;
      var percent = $("#want_payment_percent_to_charity").val();
      if (percent.length == 0) percent = 0;
      if (parseInt(cents) < 10) cents = "0" + parseInt(cents);
      $(".amount_payed .amount").html("$" + dollars + "." + cents);
      $(".amount_payed .percent").html(percent + "%");
      $(".amount_payed").show();
      if (dollars < 5) $(".amount_payed .small_amount").show();
    });
  });
  
%h2 Pay What You Want
%p So, basically you guys suck at clicking on ads :) and we need to find a way to keep the site running.
%p So we are asking everyone to pay to use the site, but you can choose how much to pay.
%p You can pay 5 cents or 5 hundred dollars. Up to you. Each payment will be good for three months on the site.

%br
%h3
  %b Charity
%p
  We also love supporting charities
  (we built
  = link_to("CharityBirthday.com", "http://www.charitybirthday.com", :target => "_blank")
  as well)
%p So you get to decide how much of your payment goes to charity.

%br
%h3
  %b Pay What You Want
= form_for @want_payment do |f|
  %p
    How much would you like to pay? &nbsp; $
    = f.text_field :amount_dollars, :size => 4, :class => "number_field amount_payed_field"
    \.
    = f.text_field :amount_cents, :size => 2, :class => "number_field amount_payed_field"
  %p
    How much of it would you like to go to charity? &nbsp;
    = f.text_field :percent_to_charity, :size => 3, :class => "number_field amount_payed_field"
    \%
  %p.amount_payed{:style => "display: none;"}
    You've chosen to pay
    %span.amount
    with
    %span.percent
    going to charity.
    %span.small.small_amount{:style => "display: none;"}
      %br
      (most charities don't accept this small of an amount, but we'll try)
  %p
    What charity should we donate to?
  %p
    Charity Name:
    = f.text_field :charity_name, :size => 15
    &nbsp; Charity Website:
    = f.text_field :charity_website, :size => 25
  %p
    \...or donate to one of our favorite charities (click the charity name to select it):
    %ul.recommended_charities.small
      %li
        %a.charity Khan Academy
        = "(education - #{link_to("website", "http://www.khanacademy.org/", :target => "_blank", :class => "website")})".html_safe
      %li
        %a.charity American Red Cross
        = "(humanitarian - #{link_to("website", "http://www.redcross.org/en/", :target => "_blank", :class => "website")})".html_safe
      %li
        %a.charity Green Corps
        = "(environment - #{link_to("website", "http://www.greencorps.org/", :target => "_blank", :class => "website")})".html_safe
      %li
        %a.charity Charity:Water
        = "(humanitarian - #{link_to("website", "http://www.charitywater.org/", :target => "_blank", :class => "website")})".html_safe


  %br
  %h3
    %b Credit Card Info

  - if @existing_customer
    %p We'll use the card we already have on file for you.
  - else
    %p
      Name On Credit Card:
      = text_field_tag :name, @want_payment.card_info.blank? ? nil : @want_payment.card_info[:name]

    %p
      Your Email:
      = text_field_tag :email, @want_payment.email

    %p
      Credit Card Number:
      %input{:type => "text", :value => (@want_payment.card_info.blank? ? nil : @want_payment.card_info[:number]), :maxlength => "20", :autocomplete => "off", :class => "card-number stripe-sensitive required"}

    %p
      CVC:
      %input{ :type => "text", :maxlength => "4", :autocomplete => "off", :class => "card-cvc stripe-sensitive required"}

    %p
      Expiration:
      %span.expiry-wrapper
        %select.card-expiry-month.stripe-sensitive.required
        \/
        %select.card-expiry-year.stripe-sensitive.required

  %p
    = submit_tag "Save and Continue Using The Site", :name => "submit-button"

    %span.payment-errors

